# Last at a specific airport and runway. Find airports and runways with --listRunways. --landAt=[instanceName=default],[airport=KSFO],[runway=10L],[approachAngleInDegrees=3] ~ AP,land
parameters {"instanceName":"default","airport":"KSFO","runway":"10L","approachAngleInDegrees":"3"}

# Find the runway.
listRunways ~!Local,airport!~,1
requireItem airport,^~!Local,airport!~$
requireItem runway,^~!Local,runway!~$

# Create the event for descending.
set AP-Dynamic,beginDescent,
	parameters instanceName
	
	# TODO Write this.
registerOnceForEvent AP-Dynamic,beginDescent,~!AP-Dynamic,beginDescent!~

countToVar Local,numberOfResults
if ~!Local,numberOfResults!~,==,1,
	# We've got a runway. Let's save it and get on with it.
	debug 1,Going to land ~!Local,instanceName!~ at:
	outNow
	stashResults Tmp,landAt
	
	# Calculate where to begin the descent.
	# feetToMeters Tmp,altitudeInMeters,~!AP,state,~!Local,instanceName!~,altitude-ft!~
	feetToMeters Tmp,altitudeInMeters,~!AP,state,~!Local,instanceName!~,cruiseAltitude!~
	degreesToRadians Tmp,approachAngleInRadians,~!Local,approachAngleInDegrees!~
	rightTriangleGetAdjacentFromAngleAndOpposite Tmp,beginDescentDistance,~!Tmp,approachAngleInRadians!~,~!Tmp,altitudeInMeters!~
	
	debug 1,altitude Feet: ~!AP,state,~!Local,instanceName!~,altitude-ft!~ Meters: ~!Tmp,altitudeInMeters!~
	debug 1,approachAngleInRadians: ~!Tmp,approachAngleInRadians!~
	debug 1,beginDescentDistance-preKM: ~!Tmp,beginDescentDistance!~
	
	basicMaths Tmp,beginDescentDistance,~!Tmp,beginDescentDistance!~,/,1000
	
	# Calculate direction to plot the approach.
	first
	loop
		2CoordsToAngle Tmp,angle,~!Result,longitudeBegin!~,~!Result,latitudeBegin!~,~!Result,longitudeEnd!~,~!Result,latitudeEnd!~
		radiansToDegrees Tmp,angleDegrees,~!Tmp,angle!~
		rotateAngleInDegrees Local,rotatedAngleDegrees,~!Tmp,angleDegrees!~,180
		
		calculateNewPosition Route,newPosition,~!Local,rotatedAngleDegrees!~,~!Tmp,beginDescentDistance!~,~!Result,longitudeBegin!~,~!Result,latitudeBegin!~
		
		# If we have waypoints, use the last one as the starting point. Otherwise take the current location.
		listWaypoints ~!Local,instanceName!~
		countToVar Local,waypointCount
		if ~!Local,waypoint!~,==,0,
			debug 0,Using current location for ~!Local,instanceName!~ to plan the landing.
			getCurrentPosition Local,startPosition,~!Local,instanceName!~
		else
			last
			loop
				debug 0,Using last waypoint for ~!Local,instanceName!~ to plan the landing.
				setNested Local,startPosition,longitude,~!Result,longitude!~
				setNested Local,startPosition,latitude,~!Result,latitude!~
		debug 0,Using location: ~!Local,startPosition,longitude!~,~!Local,startPosition,latitude!~
		
		enterLine ~!Local,instanceName!~,~!AP,state,~!Local,instanceName!~,cruiseTurningRadiusKM!~,~!Tmp,angleDegrees!~,~!Route,newPosition,longitude!~,~!Route,newPosition,latitude!~,~!Local,startPosition,longitude!~,~!Local,startPosition,latitude!~
		
		addWaypoint ~!Local,instanceName!~,~!Result,longitudeBegin!~,~!Result,latitudeBegin!~,Landing,runwayBegin
		addWaypoint ~!Local,instanceName!~,~!Result,longitudeEnd!~,~!Result,latitudeEnd!~,Landing,runwayEnd
	
	
	# TODO Calculate distance to begin descent, from 3 degrees and current altitude.
	#   TODO ALT Control descent.
	#   TODO ALT Pitch up slightly.
	#   TODO ALT Introduce flaps notch 1.
	#   TODO ALT Pitch up slightly.
	#   TODO ALT Introduce flaps notch 2.
	#   TODO ALT Pitch up slightly.
	#   TODO ALT Lower gear.
	#   TODO ALT Introduce flaps notch 3.
	#   TODO ALT Pitch up slightly.
	#   TODO ALT Touch down.
	#     TODO Engines down.
	#     TODO speed brakes.
	#     TODO Thrust reversers.
	#   TODO SPD 60.
	#     TODO Put away thrust reversers.
	#     TODO Put away speed brakes.
	# TODO Funnel at 4, 3-1km before that.
	# TODO Add waypoint of descent.
	
else
	debug 1,Could not find this airport/runway. The request was landAt ~!Local,instanceName!~,~!Local,airport!~,~!Local,runway!~.

unset Tmp,landAt
unset Tmp,altitudeInMeters
unset Tmp,approachAngleInRadians
unset Tmp,beginDescentDistance
unset Tmp,funnelDistance
unset Tmp,angle

wpToKML ~!Local,instanceName!~,/tmp/landingRoute.kml
