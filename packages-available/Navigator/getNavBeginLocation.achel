# Get either the current position or the current runway end, depending on whether the plane is moving.(logitude and latitude) and stick it in the designated location. --getCurrentPosition=Category,variable[,instanceName] . instanceName defaults to "default"
parameters {"Category":"Local","variable":"behinPosition","instanceName":"default"}

haveWaypoints Local,haveWaypoints,~!Local,instanceName!~


if ~!Local,haveWaypoints!~,==,waypoints,
    debug 1,We have waypoints. So using the last one.
    # This information is provided by listWaypoints
    setNested ~!Local,Category!~,~!Local,variable!~,longitude,~!AP,state,~!Local,instanceName!~,lastWaypoint,longitude!~
    setNested ~!Local,Category!~,~!Local,variable!~,latitude,~!AP,state,~!Local,instanceName!~,lastWaypoint,latitude!~
else
    debug 1,asdasda Got hasda 2
    isFlying Local,vehicleState,~!Local,instanceName!~
    debug 1,asdasda Got hasda 3

    if ~!Local,vehicleState!~,==,air,
        debug 1,We are in the air. Using the current location.
        getCurrentPosition ~!Local,Category!~,~!Local,variable!~
        debug 1,asdasda Got hasda 4
    else
        debug 1,We are on the ground. Using the end of the current runway.
        whereAmI ~!Local,instanceName!~
        setNested ~!Local,Category!~,~!Local,variable!~,longitude,~!AP,state,~!Local,instanceName!~,closestRunway,longitudeEnd!~
        setNested ~!Local,Category!~,~!Local,variable!~,latitude,~!AP,state,~!Local,instanceName!~,closestRunway,latitudeEnd!~
        debug 1,asdasda Got hasda 5
    debug 1,asdasda Got hasda 6

makeAvailable ~!Local,Category!~,~!Local,variable!~
