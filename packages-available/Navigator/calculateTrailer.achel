# Calculate how to get back on course using a metaphorical trailer bar to guide the steering. --calculateTrailer=instanceName ~ nav,waypoints,calculation
parameters instanceName

set Local,ready,1

if ~!AP,state,~!Local,instanceName!~,longitude-deg!~,==,,
    set Local,ready,0

if ~!AP,state,~!Local,instanceName!~,destination,longitude!~,==,,
    set Local,ready,0

if ~!Local,ready!~,==,1,
    # get origin
    setNested ["Navigator","deviance","origin",~!Navigator,origins,~!Local,instanceName!~!~]
    set Local,originX,~!Navigator,deviance,origin,longitude!~
    set Local,originY,~!Navigator,deviance,origin,latitude!~

    # get actual position
    set Local,pointX,~!AP,state,~!Local,instanceName!~,longitude-deg!~
    set Local,pointY,~!AP,state,~!Local,instanceName!~,latitude-deg!~
    setNested ["Navigator","deviance","position","longitude",~!Local,pointX!~]
    setNested ["Navigator","deviance","position","latitude",~!Local,pointY!~]

    # get destination
    setNested ["Navigator","deviance","destination",~!AP,state,~!Local,instanceName!~,destination!~]
    set Local,destinationX,~!AP,state,~!Local,instanceName!~,destination,longitude!~
    set Local,destinationY,~!AP,state,~!Local,instanceName!~,destination,latitude!~

    # Get orientation.
    set Local,orientationDegrees,~!AP,state,~!Local,instanceName!~,heading-deg!~
    degreesToRadians Local,orientation,~!Local,orientationDegrees!~

    # Get the linear calculations.
    linearPointStats Local,linearStats,~!Local,pointX!~,~!Local,pointY!~,~!Local,orientation!~,~!Local,originX!~,~!Local,originY!~,~!Local,destinationX!~,~!Local,destinationY!~
    set Local,deviance,~!Local,linearStats,distanceFromLine!~

    # Get speed.
    getAPVar ~!Local,instanceName!~,airspeed-kt,Local,speed

    # Calculate how long we have been close to the track.
    degreesToMeters Local,distanceInMeters,~!Local,linearStats,distanceFromLine!~
    absolute Local,absDistanceInMeters,~!Local,distanceInMeters!~
    microNow Local,now
    set Local,timeMultiplier,1
    set Local,proximityMultiplier,1
    # TODO Make the threshold configurable.
    basicMaths Local,thesholdBase,~!Local,speed!~,+,10
    basicMaths Local,distanceThreshold,~!Local,thesholdBase!~,*,5
    if ~!Local,absDistanceInMeters!~,>,~!Local,distanceThreshold!~,
        debug 2,outside close zone ~!Local,instanceName!~ ~!Local,absDistanceInMeters!~
        setAPVarWithContext ~!Local,instanceName!~,track,closeSince,~!Local,now!~
    else
        set Local,proximityMultiplier,2
        getAPVarWithContext ~!Local,instanceName!~,track,closeSince,Local,closeSince
        if ~!Local,closeSince!~,==,,
            setAPVarWithContext ~!Local,instanceName!~,track,closeSince,~!Local,now!~
            set Local,closeSince,~!Local,now!~
            debug 1,Set closeSince=~!Local,now!~

        basicMaths Local,closeTime,~!Local,now!~,-,~!Local,closeSince!~
        if ~!Local,closeTime!~,>,2,
            basicMaths Local,timeMultiplier,~!Local,closeTime!~,/,10

    # How long should the trailer bar be in meters?
    basicMaths Local,barLength,~!Local,speed!~,*,40
    basicMaths Local,barLength,~!Local,barLength!~,*,~!Local,timeMultiplier!~
    basicMaths Local,barLength,~!Local,barLength!~,*,~!Local,proximityMultiplier!~
    basicMaths Local,barLength,~!Local,barLength!~,+,10

    getAPVar ~!Local,instanceName!~,maxBarLength,Local,maxBarLength
    if ~!Local,barLength!~,>,~!Local,maxBarLength!~,
        set Local,barLength,~!Local,maxBarLength!~

    metersToDegrees Local,barLengthDegrees,~!Local,barLength!~

    # Calculate aiming point along the track in meters (so the differences don't get lost in rounding errors).
    basicMaths Local,cSquared,~!Local,barLength!~,^,2
    basicMaths Local,aSquared,~!Local,distanceInMeters!~,^,2
    basicMaths Local,bSquared,~!Local,cSquared!~,-,~!Local,aSquared!~
    basicMaths Local,bMeters,~!Local,bSquared!~,^,0.5
    metersToDegrees Local,b,~!Local,bMeters!~

    angleAndDistanceToCoord Local,bOffset,~!Local,linearStats,extra,lineAngle!~,~!Local,b!~
    basicMaths Local,aimX,~!Local,linearStats,extra,idealPosition,x!~,+,~!Local,bOffset,x!~
    basicMaths Local,aimY,~!Local,linearStats,extra,idealPosition,y!~,+,~!Local,bOffset,y!~

    # Calculate angular offset from the current point.
    2CoordsToAngle Local,rawAimAngle,~!Local,pointX!~,~!Local,pointY!~,~!Local,aimX!~,~!Local,aimY!~
    angleDiffRadians Local,aimAngle,~!Local,rawAimAngle!~,~!Local,orientation!~

    # Sensitivity multiplier.
    # TODO Make this configurable.
    basicMaths Local,aimAngle,~!Local,aimAngle!~,*,0.4

    # Desensitise with time.
    basicMaths Local,timeDivider,~!Local,timeMultiplier!~,/,4
    basicMaths Local,timeDivider,~!Local,timeDivider!~,+,1
    if ~!Local,timeDivider!~,>,10,
        set Local,timeDivider,10





    # New overshoot code.
    # If heading diff is greater than threshold.
    #   If the new distance is in the direction of closer to the line from the perspective of the old distance.
    #     Take absolute distance difference.
    #     Take absolute distance remaining.
    #     Take absolute remaining distance and divide by absolute distance difference.
    #     Divide by time difference.
    #
    #     If distance remaining is negative
    #       Invert.

    # Overshoot.
    # If heading diff is greater than threshold.
    set Local,shouldDoOvershoot,1
    set Local,overshootWhy,na
    getAPVar ~!Local,instanceName!~,overshootHeadingThresholdRadians,Local,overshootHeadingThresholdRadians
    angleDiffRadians Local,planeToLineAngle,~!Local,linearStats,extra,lineAngle!~,~!Local,orientation!~
    absolute Local,planeToLineAngleAbs,~!Local,planeToLineAngle!~
    if ~!Local,planeToLineAngleAbs!~,<,~!Local,overshootHeadingThresholdRadians!~,
        set Local,shouldDoOvershoot,0
        set Local,overshootWhy,angleThreshold: ~!Local,planeToLineAngleAbs!~ < ~!Local,overshootHeadingThresholdRadians!~

    # Test: If the new distance is in the direction of closer to the line from the perspective of the old distance.
    getAPVarWithContext ~!Local,instanceName!~,track,lastDistance,Local,lastDistance
    if ~!Local,lastDistance!~,==,,
        debug 1,No overshoot history. Setting it up now.
        set Local,lastDistance,~!Local,distanceInMeters!~
        setAPVarWithContext ~!Local,instanceName!~,track,lastDistance,~!Local,lastDistance!~
        setAPVarWithContext ~!Local,instanceName!~,track,lastNow,~!Local,now!~

    if ~!Local,distanceInMeters!~,==,~!Local,lastDistance!~,
        set Local,shouldDoOvershoot,0
        set Local,overshootWhy,noChange: ~!Local,distanceInMeters!~

    set Local,closer,0
    if ~!Local,lastDistance!~,<,0,
        if ~!Local,distanceInMeters!~,>,~!Local,lastDistance!~,
            set Local,closer,1
    if ~!Local,lastDistance!~,>=,0,
        if ~!Local,distanceInMeters!~,<,~!Local,lastDistance!~,
            set Local,closer,1

    if ~!Local,closer!~,==,0,
        set Local,shouldDoOvershoot,0
        set Local,overshootWhy,notCloser: ~!Local,distanceInMeters!~ vs ~!Local,lastDistance!~,

    if ~!Local,shouldDoOvershoot!~,==,1,
        basicMaths Local,distanceDiff,~!Local,distanceInMeters!~,-,~!Local,lastDistance!~
        absolute Local,distanceDiffAbsolute,~!Local,distanceDiff!~
        absolute Local,distanceRemainingAbsolute,~!Local,distanceInMeters!~

        basicMaths Local,stepsRemaining,~!Local,distanceRemainingAbsolute!~,/,~!Local,distanceDiffAbsolute!~

        getAPVarWithContext ~!Local,instanceName!~,track,lastNow,Local,lastNow
        basicMaths Local,nowChange,~!Local,lastNow!~,-,~!Local,now!~
        basicMaths Local,metersPerSecond,~!Local,distanceDiffAbsolute!~,/,~!Local,nowChange!~
        basicMaths Local,overshootSeconds,~!Local,distanceRemainingAbsolute!~,/,~!Local,metersPerSecond!~

        basicMaths Local,overshootCounterAngle,~!Local,planeToLineAngle!~,/,~!Local,overshootSeconds!~
        basicMaths Local,overshootCounterAngle,~!Local,overshootCounterAngle!~,*,-0.3



        debug 1,Overshoot dC=~!Local,distanceDiff!~ tC=~!Local,nowChange!~ m/s=~!Local,metersPerSecond!~ oss=~!Local,overshootSeconds!~ oA=~!Local,overshootCounterAngle!~

        # Did we overshoot?
        set Local,before,0
        set Local,after,0
        if ~!Local,lastDistance!~,<,0,
            set Local,before,1
        if ~!Local,distanceInMeters!~,<,0,
            set Local,after,1

        if ~!Local,before!~,!=,~!Local,after!~,
            debug 1,---------------- Crossed the line. ----------------
            mark ~!Local,instanceName!~,Crossed the line.

        basicMaths Local,aimAngleWithOvershoot,~!Local,aimAngle!~,-,~!Local,overshootCounterAngle!~
    else
        set Local,aimAngleWithOvershoot,~!Local,aimAngle!~

    setAPVarWithContext ~!Local,instanceName!~,track,lastDistance,~!Local,distanceInMeters!~
    setAPVarWithContext ~!Local,instanceName!~,track,lastNow,~!Local,now!~


    # Make it available to the AP.
    radiansToDegrees Local,aimAngle-deg,~!Local,aimAngleWithOvershoot!~
    setAPVarWithContext ~!Local,instanceName!~,track,aimAngle,~!Local,aimAngleWithOvershoot!~
    setAPVarWithContext ~!Local,instanceName!~,track,aimAngle-deg,~!Local,aimAngle-deg!~

    # For use in the map.
    setAPVarWithContext ~!Local,instanceName!~,track,aimLon,~!Local,aimX!~
    setAPVarWithContext ~!Local,instanceName!~,track,aimLat,~!Local,aimY!~



    # debug 1,bOffset=~!Local,bOffset!~  lA=~!Local,linearStats,extra,lineAngle!~  b=~!Local,b!~(~!Local,bMeters!~)  bSquared=~!Local,bSquared!~  cSquared=~!Local,cSquared!~  aSquared=~!Local,aSquared!~  distanceInMeters=~!Local,distanceInMeters!~  barLength=~!Local,barLength!~(~!Local,barLengthDegrees!~)
    debug 2,d=~!Local,distanceInMeters!~(~!Local,linearStats,distanceFromLine!~) effort=~!Local,aimAngle-deg!~ s=~!Local,speed!~ barLength=~!Local,barLength!~ aim=~!Local,aimY!~,~!Local,aimX!~ closeTime=~!Local,closeTime!~=~!Local,now!~,-,~!Local,closeSince!~ multipliers=~!Local,timeMultiplier!~,~!Local,proximityMultiplier!~

    debug 2,effort=~!Local,aimAngle-deg!~  aimAngle=~!Local,aimAngleWithOvershoot!~=~!Local,aimAngle!~,-,~!Local,overshootCounterAngle!~  d=~!Local,distanceInMeters!~  angles: r=~!Local,rawAimAngle!~ h/o=~!Local,orientation!~

    # Generated with ./generateTrailerDebug.sh
    isolate
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,absDistanceInMeters,~!Local,absDistanceInMeters!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,after,~!Local,after!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,aimAngle,~!Local,aimAngle!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,aimAngle-deg,~!Local,aimAngle-deg!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,aimAngleWithOvershoot,~!Local,aimAngleWithOvershoot!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,aimAngleWithOvershoot-deg,~!Local,aimAngleWithOvershoot-deg!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,aimX,~!Local,aimX!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,aimY,~!Local,aimY!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,aSquared,~!Local,aSquared!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,b,~!Local,b!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,barLength,~!Local,barLength!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,barLengthDegrees,~!Local,barLengthDegrees!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,before,~!Local,before!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,bMeters,~!Local,bMeters!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,bOffset-x,~!Local,bOffset,x!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,bOffset-y,~!Local,bOffset,y!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,branch,~!Local,branch!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,bSquared,~!Local,bSquared!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,closer,~!Local,closer!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,closeSince,~!Local,closeSince!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,closeTime,~!Local,closeTime!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,cSquared,~!Local,cSquared!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,destinationX,~!Local,destinationX!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,destinationY,~!Local,destinationY!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,deviance,~!Local,deviance!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,distanceDiff,~!Local,distanceDiff!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,distanceDiffAbsolute,~!Local,distanceDiffAbsolute!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,distanceInMeters,~!Local,distanceInMeters!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,distanceRemainingAbsolute,~!Local,distanceRemainingAbsolute!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,distanceThreshold,~!Local,distanceThreshold!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,lastDistance,~!Local,lastDistance!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,lastNow,~!Local,lastNow!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,maxBarLength,~!Local,maxBarLength!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,metersPerSecond,~!Local,metersPerSecond!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,now,~!Local,now!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,nowChange,~!Local,nowChange!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,orientation,~!Local,orientation!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,orientationDegrees,~!Local,orientationDegrees!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,originX,~!Local,originX!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,originY,~!Local,originY!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,overshootCounterAngle,~!Local,overshootCounterAngle!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,overshootHeadingThresholdRadians,~!Local,overshootHeadingThresholdRadians!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,overshootSeconds,~!Local,overshootSeconds!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,overshootWhy,~!Local,overshootWhy!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,planeToLineAngle,~!Local,planeToLineAngle!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,planeToLineAngleAbs,~!Local,planeToLineAngleAbs!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,pointX,~!Local,pointX!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,pointY,~!Local,pointY!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,proximityMultiplier,~!Local,proximityMultiplier!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,rawAimAngle,~!Local,rawAimAngle!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,ready,~!Local,ready!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,shouldDoOvershoot,~!Local,shouldDoOvershoot!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,speed,~!Local,speed!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,stepsRemaining,~!Local,stepsRemaining!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,thesholdBase,~!Local,thesholdBase!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,timeDivider,~!Local,timeDivider!~
        setAPVarWithContext ~!Local,instanceName!~,trailerDebug,timeMultiplier,~!Local,timeMultiplier!~
