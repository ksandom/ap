# Fly to and land at a specific runway. --flyTo=[instanceName],runwaySearchRegex . If multiple runways are matched, the first one will be chosen. ~ runways,user
parameters {"instanceName":"default", "runwaySearchRegex":""}

# setIfNothing Local,instanceName,default

if ~!Local,runwaySearchRegex!~,!=,,
	debug 1,flyTo: instance=~!Local,instanceName!~ request=~!Local,runwaySearchRegex!~
	listRunways ~!Local,runwaySearchRegex!~


	countToVar Local,runways
	if ~!Local,runways!~,>,1,
		first
		debug 1,flyTo: More than one runway matched. The first one was chosen.
		outNow

	if ~!Local,runways!~,>,0,
		debug 1,flyTo: We're ready. Let's do it.
		isFlying Local,isFlying,~!Local,instanceName!~

		if ~!Local,isFlying!~,==,ground,
			debug 1,flyTo: We aren't flying. Let's fix that.
			stashResults Local,chosenRunway
			takeOff
			retrieveResults Local,chosenRunway

		plotApproach

		debug 0,Waypoints:
		listWaypoints
	else
		debug 1,flyTo: No runways matched. Let's not fly.

	unset Local,instanceName
else
	debug 1,flyTo: instance=~!Local,instanceName!~ request=~!Local,runwaySearchRegex!~ (bad request. Perhaps there is a missing comma?)
