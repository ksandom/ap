# Calculate the final approach position. ~ navigator,abstracted
# Abstracted from plotApproach.
parameters {"instanceName":"default"}

getNamedPosition ~!Local,instanceName!~,routePlanning,touchDown,Local,touchDown

apToMeWithContext ~!Local,instanceName!~,routePlanning,finalApproachDistance
apToMeWithContext ~!Local,instanceName!~,routePlanning,inverseRunwayAngle

# TODO This is a hack. Add handeling of feet
basicMaths Me,finalApproachDistanceMeters,~!Me,finalApproachDistance!~,/,3
metersToDegrees Me,finalApproachDistanceDegrees,~!Me,finalApproachDistanceMeters!~
angleAndDistanceToCoord Me,finalApproachOffset,~!Me,inverseRunwayAngle!~,~!Me,finalApproachDistanceDegrees!~

set Me,finalApproachOffsetX,~!Me,finalApproachOffset,x!~
set Me,finalApproachOffsetY,~!Me,finalApproachOffset,y!~

# TODO Do these need to be made available?
meToAPWithContext ~!Local,instanceName!~,routePlanning,finalApproachDistanceMeters
meToAPWithContext ~!Local,instanceName!~,routePlanning,finalApproachDistanceDegrees
meToAPWithContext ~!Local,instanceName!~,routePlanning,finalApproachOffsetX
meToAPWithContext ~!Local,instanceName!~,routePlanning,finalApproachOffsetY

basicMaths Local,finalApproachLon,~!Me,finalApproachOffset,x!~,+,~!Local,touchDown,lon!~
basicMaths Local,finalApproachLat,~!Me,finalApproachOffset,y!~,+,~!Local,touchDown,lat!~

setNamedPosition ~!Local,instanceName!~,routePlanning,finalApproach,~!Local,finalApproachLon!~,~!Local,finalApproachLat!~
