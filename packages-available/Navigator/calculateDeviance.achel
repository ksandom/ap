# Calculate how far off we are from the requested course. This is really useful when a precise, straight path is required. For a more relaxed path, the heading is more likely to be useful. --calculateDeviance=instanceName ~ nav,waypoints,calculation
parameters instanceName

set Local,ready,1

if ~!AP,state,~!Local,instanceName!~,longitude-deg!~,==,,
	set Local,ready,0

if ~!AP,state,~!Local,instanceName!~,destination,longitude!~,==,,
	set Local,ready,0

if ~!Local,ready!~,==,1,
	# get origin
	setNested ["Navigator","deviance","origin",~!Navigator,origins,~!Local,instanceName!~!~]
	set Local,originX,~!Navigator,deviance,origin,longitude!~
	set Local,originY,~!Navigator,deviance,origin,latitude!~

	# get actual position
	set Local,pointX,~!AP,state,~!Local,instanceName!~,longitude-deg!~
	set Local,pointY,~!AP,state,~!Local,instanceName!~,latitude-deg!~
	setNested ["Navigator","deviance","position","longitude",~!Local,pointX!~]
	setNested ["Navigator","deviance","position","latitude",~!Local,pointY!~]

	# get destination
	setNested ["Navigator","deviance","destination",~!AP,state,~!Local,instanceName!~,destination!~]
	set Local,destinationX,~!AP,state,~!Local,instanceName!~,destination,longitude!~
	set Local,destinationY,~!AP,state,~!Local,instanceName!~,destination,latitude!~

	# Get orientation.
	set Local,orientationDegrees,~!AP,state,~!Local,instanceName!~,heading-deg!~
	degreesToRadians Local,orientation,~!Local,orientationDegrees!~

	# Do the calculations.
	linearPointStats Local,linearStats,~!Local,pointX!~,~!Local,pointY!~,~!Local,orientation!~,~!Local,originX!~,~!Local,originY!~,~!Local,destinationX!~,~!Local,destinationY!~
	set Local,deviance,~!Local,linearStats,distanceFromLine!~

	# Give us the meters equivalent.
	degreesToMeters Local,devianceInMeters,~!Local,deviance!~

	# Keep track of the previous and current deviance.
	if ~!AP,state,~!Local,instanceName!~,course-deviance!~,!=,,
		setNested AP,state,~!Local,instanceName!~,course-deviance-previous,~!AP,state,~!Local,instanceName!~,course-deviance!~
	else
		setNested AP,state,~!Local,instanceName!~,course-deviance-previous,~!Local,deviance!~

	# Send it where needed.
	setNested AP,state,~!Local,instanceName!~,course-deviance,~!Local,deviance!~
	setNested AP,state,~!Local,instanceName!~,course-devianceInMeters,~!Local,devianceInMeters!~
	setNested Navigator,deviance,~!Local,instanceName!~,course-deviance,~!Local,deviance!~
	setNested Navigator,deviance,~!Local,instanceName!~,cource-devianceInMeters,~!Local,devianceInMeters!~
	setNested ["AP","state","~!Local,instanceName!~","linearStats",~!Local,linearStats!~]


	# TODO Is this still needed?
	# speedBasedDeviance

else
	debug 1,Instance ~!Local,instanceName!~ is not ready to fly.
