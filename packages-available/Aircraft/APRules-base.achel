# Create some base rules that other planes can inherit from. --APRules-base=[instanceName] . instanceName defaults to "default". ~ AP,rules,plane

set Tmp,instanceName,~!Global,APRules-base-0!~
if ~!Tmp,instanceName!~,==,,
	set Tmp,instanceName,default


# TODO double check out the events are called (I can't remember). If they don't convey the instanceName (which I think they don't), it can be set in this macro as the value being passed, and also being amended to the event name so that there isn't clash.


# Structure: AP,stateRules,instanceName,stateName,stateComponent

# Base settings
# Roll
massSet ["AP,stateRules,base,base,roll"],
	setNested ~!Me,stuff!~,input,min,-45
	setNested ~!Me,stuff!~,input,center,0
	setNested ~!Me,stuff!~,input,max,45
	setNested ~!Me,stuff!~,input,multiplier,10
	
	setNested ~!Me,stuff!~,output,min,1
	setNested ~!Me,stuff!~,output,center,0
	setNested ~!Me,stuff!~,output,max,-1
	setNested ~!Me,stuff!~,output,multiplier,1
	
	# TODO These need to be abstracted out
	setNested ["~!Me,stuff!~,input,variable","AP,state,~!Tmp,instanceName!~,roll-deg"]
	setNested ["~!Me,stuff!~,input,goal","AP,state,~!Tmp,instanceName!~,roll-goal"]
	setNested ["~!Me,stuff!~,destination,variable","AP,state,~!Tmp,instanceName!~,aileron-req"]
	setNested ["~!Me,stuff!~,destination,textOutput","set /controls/flight/aileron ~%value%~"]


# Pitch
massSet ["AP,stateRules,base,base,pitch"],
	setNested ~!Me,stuff!~,input,min,-90
	setNested ~!Me,stuff!~,input,center,0
	setNested ~!Me,stuff!~,input,max,90
	setNested ~!Me,stuff!~,input,multiplier,3
	
	setNested ~!Me,stuff!~,output,min,-1
	setNested ~!Me,stuff!~,output,center,0
	setNested ~!Me,stuff!~,output,max,1
	setNested ~!Me,stuff!~,output,multiplier,0.8
	
	# TODO These need to be abstracted out
	setNested ["~!Me,stuff!~,input,variable","AP,state,~!Tmp,instanceName!~,pitch-deg"]
	setNested ["~!Me,stuff!~,input,goal","AP,state,~!Tmp,instanceName!~,pitch-goal"]
	setNested ["~!Me,stuff!~,destination,variable","AP,state,~!Tmp,instanceName!~,elevator-req"]
	setNested ["~!Me,stuff!~,destination,textOutput","set /controls/flight/elevator ~%value%~"]


# Yaw
setNested ["AP","stateRules","base","base","yaw","input","min","-45"]
setNested ["AP","stateRules","base","base","yaw","input","center","0"]
setNested ["AP","stateRules","base","base","yaw","input","max","45"]
setNested ["AP","stateRules","base","base","yaw","input","multiplier","10"]

setNested ["AP","stateRules","base","base","yaw","output","min","0.4"]
setNested ["AP","stateRules","base","base","yaw","output","center","0"]
setNested ["AP","stateRules","base","base","yaw","output","max","-0.4"]
setNested ["AP","stateRules","base","base","yaw","output","multiplier","1"]

# TODO These need to be abstracted out
setNested ["AP","stateRules","base","base","yaw","input","variable","AP,state,~!Tmp,instanceName!~,track-deviance"]
setNested ["AP","stateRules","base","base","yaw","input","goal","AP,stateRules,base,base,yaw,input,center"]
setNested ["AP","stateRules","base","base","yaw","destination","variable","AP,state,~!Tmp,instanceName!~,rudder-req"]
setNested ["AP","stateRules","base","base","yaw","destination","textOutput","set /controls/flight/rudder ~%value%~"]


# +Altitude
setNested ["AP","stateRules","base","baseAltitude",~!AP,stateRules,base,base!~]

setNested ["AP","stateRules","base","baseAltitude","altitude","input","min","-1"]
setNested ["AP","stateRules","base","baseAltitude","altitude","input","center","0"]
setNested ["AP","stateRules","base","baseAltitude","altitude","input","max","300"]
setNested ["AP","stateRules","base","baseAltitude","altitude","input","multiplier","1"]

setNested ["AP","stateRules","base","baseAltitude","altitude","output","min","-1"]
setNested ["AP","stateRules","base","baseAltitude","altitude","output","center","0"]
setNested ["AP","stateRules","base","baseAltitude","altitude","output","max","1"]
setNested ["AP","stateRules","base","baseAltitude","altitude","output","multiplier","1"]

# TODO These need to be abstracted out
setNested ["AP","stateRules","base","baseAltitude","altitude","input","variable","AP,state,~!Tmp,instanceName!~,altitude-deviance"]
setNested ["AP","stateRules","base","baseAltitude","altitude","input","goal","AP,stateRules,baseAltitude,base,altitude,input,center"]
setNested ["AP","stateRules","base","baseAltitude","altitude","destination","variable","AP,state,~!Tmp,instanceName!~,throttle-req"]
setNested ["AP","stateRules","base","baseAltitude","altitude","destination","textOutput","set /controls/engines/engine/throttle ~%value%~"]





# More specific rules
# Stand on the runway
setNested ["AP", "stateRules", "~!Tmp,instanceName!~", "stand", ~!AP,stateRules,base,base!~]



# Take off - roll forward
setNested ["AP", "stateRules", "~!Tmp,instanceName!~", "rollForward", ~!AP,stateRules,base,base!~]

setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","min","-1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","center","0"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","max","40"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","multiplier","1"]

setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","output","min","1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","output","center","0"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","output","max","-1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","output","multiplier","0.5"]

# TODO These need to be abstracted out
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","variable","AP,state,~!Tmp,instanceName!~,groundspeed-kt"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","goal","AP,state,~!Tmp,instanceName!~,groundspeed-goal"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","destination","variable","AP,state,~!Tmp,instanceName!~,throttle-req"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","destination","textOutput","set /controls/engines/engine/throttle ~%value%~"]


setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","events","ready","description","We seem to be moving. Let's go!"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","events","ready","testValue","3"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","events","ready","operator",">"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","events","ready","operator",">"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","events","ready","eventName","AP,takeOffReady"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","rollForward","groundspeed","input","events","ready","debugLevel","1"]

# TODO Check that this is instance aware
registerForEvent AP,takeOffReady,setAPState,takeOffAccelerate



# Take off - accelerate
setNested ["AP", "stateRules", "~!Tmp,instanceName!~", "takeOffAccelerate", ~!AP,stateRules,base,base!~]

# Speed based events
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","min","-1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","center","0"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","max","4000"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","multiplier","1"]

setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","output","min","1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","output","center","0"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","output","max","-1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","output","multiplier","1"]

# TODO These need to be abstracted out
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","variable","AP,state,~!Tmp,instanceName!~,airspeed-kt"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","goal","0"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","destination","variable",""]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","destination","textOutput",""]

setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v1","testValue","AP,state,~!Tmp,instanceName!~,v1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v1","description","V1 - Passed point of no return."]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v1","operator",">"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v1","eventName","AP,takeOffV1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v1","debugLevel","1"]

setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v2","description","V2 Rotate!"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v2","testValue","AP,state,~!Tmp,instanceName!~,v2"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v2","description","V2 - Rorate!"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v2","operator",">"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v2","eventName","AP,takeOffV2"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffAccelerate","speedEvents","input","events","v2","debugLevel","1"]

registerForEvent AP,takeOffV1,v1
registerForEvent AP,takeOffV2,v2



# Take off - abort
setNested ["AP", "stateRules", "~!Tmp,instanceName!~", "takeOffAbort", ~!AP,stateRules,base,base!~]



# Take off - climb
setNested ["AP", "stateRules", "~!Tmp,instanceName!~", "takeOffClimb", ~!AP,stateRules,base,base!~]

# Pitch
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","pitch","algorithm","acceleration"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","pitch","input","maxChangePerSecond","7"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","pitch","input","overshootTime","3"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","pitch","output","accelerateMultiplier","0.3"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","pitch","output","decelerateMultiplier","0.1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","pitch","output","seedPercent","0.1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","pitch","output","allowPanic","0"]


# Altitude events
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","min","-1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","center","0"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","max","100000"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","multiplier","1"]

setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","output","min","-1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","output","center","0"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","output","max","1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","output","multiplier","1"]

# TODO These need to be abstracted out
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","variable","AP,state,~!Tmp,instanceName!~,altitude-agl-ft"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","goal","AP,stateRules,~!Tmp,instanceName!~,takeOffClimb,altitudeEvents,input,center"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","destination","variable",""]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","destination","textOutput",""]

setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","gearUp","testValue","60"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","gearUp","description","We're high enough to raise the gear."]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","gearUp","operator",">"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","gearUp","eventName","AP,gearUp"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","gearUp","debugLevel","1"]

setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","reduceFlaps","testValue","400"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","reduceFlaps","description","Reduce flaps."]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","reduceFlaps","operator",">"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","reduceFlaps","eventName","AP,reduceFlaps"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","reduceFlaps","debugLevel","1"]

setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","testValue","700"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","description","Flaps up."]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","operator",">"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","eventName","AP,flapsUp"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","debugLevel","1"]

setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","testValue","1000"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","description","Time to sustain the climb in a less agressive manner."]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","operator",">"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","eventName","AP,sustain"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeEvents","input","events","flapsUp","debugLevel","1"]

pass
	# Altitude offset events
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","min","-1"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","center","0"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","max","100000"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","multiplier","1"]

	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","output","min","-1"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","output","center","0"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","output","max","1"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","output","multiplier","1"]

	# TODO These need to be abstracted out
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","variable","AP,state,~!Tmp,instanceName!~,altitude-deviance"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","goal","AP,stateRules,~!Tmp,instanceName!~,takeOffClimb,altitudeOffsetEvents,input,center"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","destination","variable",""]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","destination","textOutput",""]

	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","events","sustain","testValue","500"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","events","sustain","description","We're reaching our altitude goal. Time to relax the climb."]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","events","sustain","operator",">"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","events","sustain","eventName","AP,sustain"]
	setNested ["AP","stateRules","~!Tmp,instanceName!~","takeOffClimb","altitudeOffsetEvents","input","events","sustain","debugLevel","1"]

registerForEvent AP,sustain,levelOut


# Sustain flight - just cruise at what ever speed is natural
setNested ["AP", "stateRules", "~!Tmp,instanceName!~", "sustain", ~!AP,stateRules,base,baseAltitude!~]



# Speed controlled
setNested ["AP", "stateRules", "~!Tmp,instanceName!~", "speedControlled", ~!AP,stateRules,base,baseAltitude!~]

# Pitch
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","input","variable","AP,state,~!Tmp,instanceName!~,airspeed-kt"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","input","goal","AP,state,~!Tmp,instanceName!~,airspeed-goal"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","destination","variable","AP,state,~!Tmp,instanceName!~,pitch-goal"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","destination","textOutput",""]

setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","algorithm","acceleration"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","input","maxChangePerSecond","7"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","input","overshootTime","3"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","output","min","-45"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","output","max","45"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","output","accelerateMultiplier","0.01"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","output","decelerateMultiplier","0.1"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","output","seedPercent","0.01"]
setNested ["AP","stateRules","~!Tmp,instanceName!~","speedControlled","speed","output","allowPanic","0"]


pass
	get AP,stateRules,~!Tmp,instanceName!~,sustain
	setNested
	outNow
