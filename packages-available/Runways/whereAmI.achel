# Workout what runway is closest to our current position. --whereAmI=[instanceName] . instanceName defaults to default. ~ runways,user

parameters {"instanceName":"default"}

debug 1,whichRunwayIsClosest ~!AP,state,~!Local,instanceName!~,longitude-deg!~,~!AP,state,~!Local,instanceName!~,latitude-deg!~,1
whichRunwayIsClosest ~!AP,state,~!Local,instanceName!~,longitude-deg!~,~!AP,state,~!Local,instanceName!~,latitude-deg!~,1

loop
	isolate
		getCategory Result
		stashResults AP,state,~!Local,instanceName!~,closestRunway
		unset AP,state,~!Local,instanceName!~,closestRunway,key

	debug 1,2CoordsToDistance Tmp,distanceDegrees,~!AP,state,~!Local,instanceName!~,longitude-deg!~,~!AP,state,~!Local,instanceName!~,latitude-deg!~,~!Result,longitudeBegin!~,~!Result,latitudeBegin!~

	2CoordsToDistance Tmp,distanceDegrees,~!AP,state,~!Local,instanceName!~,longitude-deg!~,~!AP,state,~!Local,instanceName!~,latitude-deg!~,~!Result,longitudeBegin!~,~!Result,latitudeBegin!~
	degreesToDistance Tmp,distance,~!Tmp,distanceDegrees!~

	debug 1,Distance from marked runway: ~!Tmp,distance!~km key=~!Result,retrieveKey!~


outNow

